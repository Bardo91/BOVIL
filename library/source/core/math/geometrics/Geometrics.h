/////////////////////////////////////////////////////////////////////////////////////////
//	BOVIL: core
//
//		Author: Pablo Ramón Soria
//		Date:	2014-05-03
//
/////////////////////////////////////////////////////////////////////////////////////////


#include "../Matrix.h"
#include "../../types/BasicTypes.h"

namespace BOViL{
	namespace math{
		const double PiCte = 3.14159265359;

		//-------------------------------------------------------------------------------------
		//------------------------- Classes ---------------------------------------------------
		//-------------------------------------------------------------------------------------

		//-------------------------------------------------------------------------------------

		//-------------------------------------------------------------------------------------

		//-------------------------------------------------------------------------------------

		//-------------------------------------------------------------------------------------
		//-------------------------  Matrix related functions ---------------------------------
		//-------------------------------------------------------------------------------------
		enum class eEdges { EdgeX, EdgeY, EdgeZ };

		//-------------------------------------------------------------------------------------
		Matrix<double> createRotationMatrix(eEdges _edge, double angle);

		//-------------------------------------------------------------------------------------
Matrix<double> createRotationMatrixEuler(double _alpha, double _beta, double _gamma);
		//-------------------------------------------------------------------------------------

		//-------------------------------------------------------------------------------------

		//-------------------------------------------------------------------------------------
		//------------------------- Spatial function ------------------------------------------
		//-------------------------------------------------------------------------------------
		Matrix<double> triangulateFromImageToGround3D(Point2ui _point2d, Matrix<double> & _camPos, Matrix<double> &_camOri, double _focalLenght, Point2d _camCentroid, double _groundAltitude = 0.0);

		//-------------------------------------------------------------------------------------

		//-------------------------------------------------------------------------------------

		//-------------------------------------------------------------------------------------
	}	// namespace geometrics

}	// namespace BOViL